/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/input/input';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '@angular/common/src/localization';
import * as import6 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/i18n/tokens';
import * as import9 from '@angular/core/src/linker/view';
import * as import10 from '@angular/core/src/change_detection/change_detection_util';
import * as import11 from '@angular/core/src/linker/view_utils';
import * as import12 from '@angular/core/src/render/api';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '@angular/core/src/linker/view_type';
import * as import16 from '@angular/core/src/change_detection/constants';
import * as import17 from '@angular/core/src/linker/component_factory';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/forms/src/directives/control_value_accessor';
import * as import20 from './input.css.ngstyle';
import * as import21 from '../../forms/src/directives/default_value_accessor.ngfactory';
import * as import22 from '../../forms/src/directives/validators.ngfactory';
import * as import23 from '../../forms/src/directives/ng_model.ngfactory';
import * as import24 from '../../forms/src/directives/ng_control_status.ngfactory';
import * as import25 from '@angular/core/src/linker/view_container';
import * as import26 from '@angular/forms/src/directives/default_value_accessor';
import * as import27 from '@angular/forms/src/directives/validators';
import * as import28 from '@angular/forms/src/validators';
import * as import29 from '@angular/forms/src/directives/ng_model';
import * as import30 from '@angular/forms/src/directives/ng_control';
import * as import31 from '@angular/forms/src/directives/ng_control_status';
import * as import32 from '../../common/src/directives/ng_if.ngfactory';
import * as import33 from '@angular/core/src/linker/template_ref';
import * as import34 from '@angular/common/src/directives/ng_if';
class MdInputModuleInjector extends import0.NgModuleInjector<import1.MdInputModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _FormsModule_2:import4.FormsModule;
  _MdInputModule_3:import1.MdInputModule;
  __NgLocalization_4:import5.NgLocaleLocalization;
  __RadioControlRegistry_5:import6.RadioControlRegistry;
  constructor(parent:import7.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_4():import5.NgLocaleLocalization {
    if ((this.__NgLocalization_4 == null)) { (this.__NgLocalization_4 = new import5.NgLocaleLocalization(this.parent.get(import8.LOCALE_ID))); }
    return this.__NgLocalization_4;
  }
  get _RadioControlRegistry_5():import6.RadioControlRegistry {
    if ((this.__RadioControlRegistry_5 == null)) { (this.__RadioControlRegistry_5 = new import6.RadioControlRegistry()); }
    return this.__RadioControlRegistry_5;
  }
  createInternal():import1.MdInputModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._FormsModule_2 = new import4.FormsModule();
    this._MdInputModule_3 = new import1.MdInputModule();
    return this._MdInputModule_3;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.FormsModule)) { return this._FormsModule_2; }
    if ((token === import1.MdInputModule)) { return this._MdInputModule_3; }
    if ((token === import5.NgLocalization)) { return this._NgLocalization_4; }
    if ((token === import6.RadioControlRegistry)) { return this._RadioControlRegistry_5; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdInputModuleNgFactory:import0.NgModuleFactory<import1.MdInputModule> = new import0.NgModuleFactory(MdInputModuleInjector,import1.MdInputModule);
export class Wrapper_MdPlaceholder {
  /*private*/ _eventHandler:Function;
  context:import1.MdPlaceholder;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdPlaceholder();
  }
  ngOnDetach(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import9.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import9.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdInput {
  /*private*/ _eventHandler:Function;
  context:import1.MdInput;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  /*private*/ _expr_32:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import1.MdInput(p0);
    this._expr_0 = import10.UNINITIALIZED;
    this._expr_1 = import10.UNINITIALIZED;
    this._expr_2 = import10.UNINITIALIZED;
    this._expr_3 = import10.UNINITIALIZED;
    this._expr_4 = import10.UNINITIALIZED;
    this._expr_5 = import10.UNINITIALIZED;
    this._expr_6 = import10.UNINITIALIZED;
    this._expr_7 = import10.UNINITIALIZED;
    this._expr_8 = import10.UNINITIALIZED;
    this._expr_9 = import10.UNINITIALIZED;
    this._expr_10 = import10.UNINITIALIZED;
    this._expr_11 = import10.UNINITIALIZED;
    this._expr_12 = import10.UNINITIALIZED;
    this._expr_13 = import10.UNINITIALIZED;
    this._expr_14 = import10.UNINITIALIZED;
    this._expr_15 = import10.UNINITIALIZED;
    this._expr_16 = import10.UNINITIALIZED;
    this._expr_17 = import10.UNINITIALIZED;
    this._expr_18 = import10.UNINITIALIZED;
    this._expr_19 = import10.UNINITIALIZED;
    this._expr_20 = import10.UNINITIALIZED;
    this._expr_21 = import10.UNINITIALIZED;
    this._expr_22 = import10.UNINITIALIZED;
    this._expr_23 = import10.UNINITIALIZED;
    this._expr_24 = import10.UNINITIALIZED;
    this._expr_25 = import10.UNINITIALIZED;
    this._expr_26 = import10.UNINITIALIZED;
    this._expr_27 = import10.UNINITIALIZED;
    this._expr_28 = import10.UNINITIALIZED;
    this._expr_29 = import10.UNINITIALIZED;
    this._expr_30 = import10.UNINITIALIZED;
    this._expr_31 = import10.UNINITIALIZED;
    this._expr_32 = import10.UNINITIALIZED;
  }
  ngOnDetach(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_ariaLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.ariaLabel = currValue;
      this._changes['ariaLabel'] = new import10.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_ariaLabelledBy(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.ariaLabelledBy = currValue;
      this._changes['ariaLabelledBy'] = new import10.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_ariaDisabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.ariaDisabled = currValue;
      this._changes['ariaDisabled'] = new import10.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_ariaRequired(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.ariaRequired = currValue;
      this._changes['ariaRequired'] = new import10.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_ariaInvalid(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.ariaInvalid = currValue;
      this._changes['ariaInvalid'] = new import10.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._changes['align'] = new import10.SimpleChange(this._expr_5,currValue);
      this._expr_5 = currValue;
    }
  }
  check_dividerColor(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.dividerColor = currValue;
      this._changes['dividerColor'] = new import10.SimpleChange(this._expr_6,currValue);
      this._expr_6 = currValue;
    }
  }
  check_hintLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.hintLabel = currValue;
      this._changes['hintLabel'] = new import10.SimpleChange(this._expr_7,currValue);
      this._expr_7 = currValue;
    }
  }
  check_autocomplete(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.autocomplete = currValue;
      this._changes['autocomplete'] = new import10.SimpleChange(this._expr_8,currValue);
      this._expr_8 = currValue;
    }
  }
  check_autocorrect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.autocorrect = currValue;
      this._changes['autocorrect'] = new import10.SimpleChange(this._expr_9,currValue);
      this._expr_9 = currValue;
    }
  }
  check_autocapitalize(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.autocapitalize = currValue;
      this._changes['autocapitalize'] = new import10.SimpleChange(this._expr_10,currValue);
      this._expr_10 = currValue;
    }
  }
  check_id(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.id = currValue;
      this._changes['id'] = new import10.SimpleChange(this._expr_11,currValue);
      this._expr_11 = currValue;
    }
  }
  check_list(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.list = currValue;
      this._changes['list'] = new import10.SimpleChange(this._expr_12,currValue);
      this._expr_12 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._changes['max'] = new import10.SimpleChange(this._expr_13,currValue);
      this._expr_13 = currValue;
    }
  }
  check_maxlength(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_14,currValue))) {
      this._changed = true;
      this.context.maxlength = currValue;
      this._changes['maxlength'] = new import10.SimpleChange(this._expr_14,currValue);
      this._expr_14 = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_15,currValue))) {
      this._changed = true;
      this.context.min = currValue;
      this._changes['min'] = new import10.SimpleChange(this._expr_15,currValue);
      this._expr_15 = currValue;
    }
  }
  check_minlength(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_16,currValue))) {
      this._changed = true;
      this.context.minlength = currValue;
      this._changes['minlength'] = new import10.SimpleChange(this._expr_16,currValue);
      this._expr_16 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_17,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._changes['placeholder'] = new import10.SimpleChange(this._expr_17,currValue);
      this._expr_17 = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_18,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._changes['step'] = new import10.SimpleChange(this._expr_18,currValue);
      this._expr_18 = currValue;
    }
  }
  check_tabindex(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_19,currValue))) {
      this._changed = true;
      this.context.tabindex = currValue;
      this._changes['tabindex'] = new import10.SimpleChange(this._expr_19,currValue);
      this._expr_19 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_20,currValue))) {
      this._changed = true;
      this.context.type = currValue;
      this._changes['type'] = new import10.SimpleChange(this._expr_20,currValue);
      this._expr_20 = currValue;
    }
  }
  check_name(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_21,currValue))) {
      this._changed = true;
      this.context.name = currValue;
      this._changes['name'] = new import10.SimpleChange(this._expr_21,currValue);
      this._expr_21 = currValue;
    }
  }
  check_rows(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_22,currValue))) {
      this._changed = true;
      this.context.rows = currValue;
      this._changes['rows'] = new import10.SimpleChange(this._expr_22,currValue);
      this._expr_22 = currValue;
    }
  }
  check_cols(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_23,currValue))) {
      this._changed = true;
      this.context.cols = currValue;
      this._changes['cols'] = new import10.SimpleChange(this._expr_23,currValue);
      this._expr_23 = currValue;
    }
  }
  check_wrap(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_24,currValue))) {
      this._changed = true;
      this.context.wrap = currValue;
      this._changes['wrap'] = new import10.SimpleChange(this._expr_24,currValue);
      this._expr_24 = currValue;
    }
  }
  check_floatingPlaceholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_25,currValue))) {
      this._changed = true;
      this.context.floatingPlaceholder = currValue;
      this._changes['floatingPlaceholder'] = new import10.SimpleChange(this._expr_25,currValue);
      this._expr_25 = currValue;
    }
  }
  check_autofocus(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_26,currValue))) {
      this._changed = true;
      this.context.autofocus = currValue;
      this._changes['autofocus'] = new import10.SimpleChange(this._expr_26,currValue);
      this._expr_26 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_27,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._changes['disabled'] = new import10.SimpleChange(this._expr_27,currValue);
      this._expr_27 = currValue;
    }
  }
  check_readonly(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_28,currValue))) {
      this._changed = true;
      this.context.readonly = currValue;
      this._changes['readonly'] = new import10.SimpleChange(this._expr_28,currValue);
      this._expr_28 = currValue;
    }
  }
  check_required(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_29,currValue))) {
      this._changed = true;
      this.context.required = currValue;
      this._changes['required'] = new import10.SimpleChange(this._expr_29,currValue);
      this._expr_29 = currValue;
    }
  }
  check_spellcheck(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_30,currValue))) {
      this._changed = true;
      this.context.spellcheck = currValue;
      this._changes['spellcheck'] = new import10.SimpleChange(this._expr_30,currValue);
      this._expr_30 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_31,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._changes['value'] = new import10.SimpleChange(this._expr_31,currValue);
      this._expr_31 = currValue;
    }
  }
  ngDoCheck(view:import9.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if (changed) {
      this.context.ngOnChanges(this._changes);
      this._changes = {};
    } }
    return changed;
  }
  checkHost(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_32:any = this.context._align;
    if (import11.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      view.renderer.setElementAttribute(el,'align',((currVal_32 == null)? (null as any): currVal_32.toString()));
      this._expr_32 = currVal_32;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.focus()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import9.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onBlur.subscribe(_eventHandler.bind(view,'blur'))); }
    if (emit1) { (this.subscription1 = this.context.onFocus.subscribe(_eventHandler.bind(view,'focus'))); }
  }
}
export class Wrapper_MdHint {
  /*private*/ _eventHandler:Function;
  context:import1.MdHint;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor() {
    this._changed = false;
    this.context = new import1.MdHint();
    this._expr_0 = import10.UNINITIALIZED;
    this._expr_1 = import10.UNINITIALIZED;
    this._expr_2 = import10.UNINITIALIZED;
  }
  ngOnDetach(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import11.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import9.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_1:any = (this.context.align == 'end');
    if (import11.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'md-right',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = true;
    if (import11.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementClass(el,'md-hint',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import9.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_MdInput_Host:import12.RenderComponentType = import11.createRenderComponentType('',0,import13.ViewEncapsulation.None,([] as any[]),{});
class View_MdInput_Host0 extends import9.AppView<any> {
  _el_0:any;
  compView_0:import9.AppView<import1.MdInput>;
  _MdInput_0_3:Wrapper_MdInput;
  __NG_VALUE_ACCESSOR_0_4:any[];
  _query_MdPlaceholder_0_0:import14.QueryList<any>;
  _query_MdHint_0_1:import14.QueryList<any>;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdInput_Host0,renderType_MdInput_Host,import15.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_4():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) { (this.__NG_VALUE_ACCESSOR_0_4 = [this._MdInput_0_3.context]); }
    return this.__NG_VALUE_ACCESSOR_0_4;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.selectOrCreateRenderHostElement(this.renderer,'md-input',import11.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MdInput0(this.viewUtils,this,0,this._el_0);
    this._MdInput_0_3 = new Wrapper_MdInput(new import18.ElementRef(this._el_0));
    this._query_MdPlaceholder_0_0 = new import14.QueryList<any>();
    this._query_MdHint_0_1 = new import14.QueryList<any>();
    this.compView_0.create(this._MdInput_0_3.context);
    var disposable_0:Function = import11.subscribeToRenderElement(this,this._el_0,new import11.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._query_MdPlaceholder_0_0.reset(([] as any[]));
    this._MdInput_0_3.context._placeholderChild = this._query_MdPlaceholder_0_0.first;
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import17.ComponentRef_<any>(0,this,this._el_0,this._MdInput_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdInput) && (0 === requestNodeIndex))) { return this._MdInput_0_3.context; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MdInput_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdHint_0_1.dirty) {
        this._query_MdHint_0_1.reset(([] as any[]));
        this._MdInput_0_3.context._hintChildren = this._query_MdHint_0_1;
        this._query_MdHint_0_1.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._MdInput_0_3.context.ngAfterContentInit(); }
    }
    this._MdInput_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdInput_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 3))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInput_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdInputNgFactory:import17.ComponentFactory<import1.MdInput> = new import17.ComponentFactory<import1.MdInput>('md-input, md-textarea',View_MdInput_Host0,import1.MdInput);
const styles_MdInput:any[] = [import20.styles];
class View_MdInput1 extends import9.AppView<any> {
  _el_0:any;
  _DefaultValueAccessor_0_3:import21.Wrapper_DefaultValueAccessor;
  _RequiredValidator_0_4:import22.Wrapper_RequiredValidator;
  _NG_VALIDATORS_0_5:any[];
  _NG_VALUE_ACCESSOR_0_6:any[];
  _NgModel_0_7:import23.Wrapper_NgModel;
  _NgControl_0_8:any;
  _NgControlStatus_0_9:import24.Wrapper_NgControlStatus;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_MdInput1,renderType_MdInput,import15.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_8 = import10.UNINITIALIZED;
    this._expr_9 = import10.UNINITIALIZED;
    this._expr_10 = import10.UNINITIALIZED;
    this._expr_11 = import10.UNINITIALIZED;
    this._expr_12 = import10.UNINITIALIZED;
    this._expr_13 = import10.UNINITIALIZED;
    this._expr_14 = import10.UNINITIALIZED;
    this._expr_15 = import10.UNINITIALIZED;
    this._expr_16 = import10.UNINITIALIZED;
    this._expr_17 = import10.UNINITIALIZED;
    this._expr_18 = import10.UNINITIALIZED;
    this._expr_19 = import10.UNINITIALIZED;
    this._expr_20 = import10.UNINITIALIZED;
    this._expr_21 = import10.UNINITIALIZED;
    this._expr_22 = import10.UNINITIALIZED;
    this._expr_23 = import10.UNINITIALIZED;
    this._expr_24 = import10.UNINITIALIZED;
    this._expr_25 = import10.UNINITIALIZED;
    this._expr_26 = import10.UNINITIALIZED;
    this._expr_27 = import10.UNINITIALIZED;
    this._expr_28 = import10.UNINITIALIZED;
    this._expr_29 = import10.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.createRenderElement(this.renderer,(null as any),'input',new import11.InlineArray2(2,'class','md-input-element'),(null as any));
    this._DefaultValueAccessor_0_3 = new import21.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_0));
    this._RequiredValidator_0_4 = new import22.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_0_5 = [this._RequiredValidator_0_4.context];
    this._NG_VALUE_ACCESSOR_0_6 = [this._DefaultValueAccessor_0_3.context];
    this._NgModel_0_7 = new import23.Wrapper_NgModel((null as any),this._NG_VALIDATORS_0_5,(null as any),this._NG_VALUE_ACCESSOR_0_6);
    this._NgControl_0_8 = this._NgModel_0_7.context;
    this._NgControlStatus_0_9 = new import24.Wrapper_NgControlStatus(this._NgControl_0_8);
    var disposable_0:Function = import11.subscribeToRenderElement(this,this._el_0,new import11.InlineArray16(10,'focus',(null as any),'blur',(null as any),'ngModelChange',(null as any),'change',(null as any),'input',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_7.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import26.DefaultValueAccessor) && (0 === requestNodeIndex))) { return this._DefaultValueAccessor_0_3.context; }
    if (((token === import27.RequiredValidator) && (0 === requestNodeIndex))) { return this._RequiredValidator_0_4.context; }
    if (((token === import28.NG_VALIDATORS) && (0 === requestNodeIndex))) { return this._NG_VALIDATORS_0_5; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_6; }
    if (((token === import29.NgModel) && (0 === requestNodeIndex))) { return this._NgModel_0_7.context; }
    if (((token === import30.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_8; }
    if (((token === import31.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.context.required;
    this._RequiredValidator_0_4.check_required(currVal_0_1_0,throwOnChange,false);
    this._RequiredValidator_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_2_0:any = this.parentView.context.disabled;
    this._NgModel_0_7.check_isDisabled(currVal_0_2_0,throwOnChange,false);
    const currVal_0_2_1:any = this.parentView.context.value;
    this._NgModel_0_7.check_model(currVal_0_2_1,throwOnChange,false);
    this._NgModel_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_9.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_8:any = (this.parentView.context.align == 'end');
    if (import11.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'md-end',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.parentView.context.ariaLabel;
    if (import11.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementAttribute(this._el_0,'aria-label',((currVal_9 == null)? (null as any): currVal_9.toString()));
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.parentView.context.ariaLabelledBy;
    if (import11.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementAttribute(this._el_0,'aria-labelledby',((currVal_10 == null)? (null as any): currVal_10.toString()));
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.parentView.context.ariaDisabled;
    if (import11.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementAttribute(this._el_0,'aria-disabled',((currVal_11 == null)? (null as any): currVal_11.toString()));
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.parentView.context.ariaRequired;
    if (import11.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_0,'aria-required',((currVal_12 == null)? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.parentView.context.ariaInvalid;
    if (import11.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementAttribute(this._el_0,'aria-invalid',((currVal_13 == null)? (null as any): currVal_13.toString()));
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parentView.context.autocomplete;
    if (import11.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementAttribute(this._el_0,'autocomplete',((currVal_14 == null)? (null as any): currVal_14.toString()));
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this.parentView.context.autocorrect;
    if (import11.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementAttribute(this._el_0,'autocorrect',((currVal_15 == null)? (null as any): currVal_15.toString()));
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = this.parentView.context.autocapitalize;
    if (import11.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementAttribute(this._el_0,'autocapitalize',((currVal_16 == null)? (null as any): currVal_16.toString()));
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.parentView.context.autofocus;
    if (import11.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_0,'autofocus',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.parentView.context.inputId;
    if (import11.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = this.parentView.context.list;
    if (import11.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementAttribute(this._el_0,'list',((currVal_19 == null)? (null as any): currVal_19.toString()));
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.parentView.context.max;
    if (import11.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementAttribute(this._el_0,'max',((currVal_20 == null)? (null as any): currVal_20.toString()));
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.parentView.context.maxlength;
    if (import11.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementAttribute(this._el_0,'maxlength',((currVal_21 == null)? (null as any): currVal_21.toString()));
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.parentView.context.min;
    if (import11.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementAttribute(this._el_0,'min',((currVal_22 == null)? (null as any): currVal_22.toString()));
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this.parentView.context.minlength;
    if (import11.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementAttribute(this._el_0,'minlength',((currVal_23 == null)? (null as any): currVal_23.toString()));
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.parentView.context.readonly;
    if (import11.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_0,'readOnly',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = this.parentView.context.spellcheck;
    if (import11.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementProperty(this._el_0,'spellcheck',currVal_25);
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = this.parentView.context.step;
    if (import11.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementAttribute(this._el_0,'step',((currVal_26 == null)? (null as any): currVal_26.toString()));
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this.parentView.context.tabindex;
    if (import11.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementAttribute(this._el_0,'tabindex',((currVal_27 == null)? (null as any): currVal_27.toString()));
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = this.parentView.context.type;
    if (import11.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementProperty(this._el_0,'type',currVal_28);
      this._expr_28 = currVal_28;
    }
    const currVal_29:any = this.parentView.context.name;
    if (import11.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementAttribute(this._el_0,'name',((currVal_29 == null)? (null as any): currVal_29.toString()));
      this._expr_29 = currVal_29;
    }
    this._RequiredValidator_0_4.checkHost(this,this,this._el_0,throwOnChange);
    this._NgControlStatus_0_9.checkHost(this,this,this._el_0,throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_MdInput0>this.parentView)._viewQuery_input_0.setDirty();
  }
  destroyInternal():void {
    this._NgModel_0_7.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'focus')) {
      const pd_sub_0:any = ((<any>this.parentView.context._handleFocus($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_1:any = ((<any>this.parentView.context._handleBlur($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_2:any = ((<any>(this.parentView.context.value = $event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'change')) {
      const pd_sub_3:any = ((<any>this.parentView.context._handleChange($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
class View_MdInput2 extends import9.AppView<any> {
  _el_0:any;
  _DefaultValueAccessor_0_3:import21.Wrapper_DefaultValueAccessor;
  _RequiredValidator_0_4:import22.Wrapper_RequiredValidator;
  _NG_VALIDATORS_0_5:any[];
  _NG_VALUE_ACCESSOR_0_6:any[];
  _NgModel_0_7:import23.Wrapper_NgModel;
  _NgControl_0_8:any;
  _NgControlStatus_0_9:import24.Wrapper_NgControlStatus;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_MdInput2,renderType_MdInput,import15.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_8 = import10.UNINITIALIZED;
    this._expr_9 = import10.UNINITIALIZED;
    this._expr_10 = import10.UNINITIALIZED;
    this._expr_11 = import10.UNINITIALIZED;
    this._expr_12 = import10.UNINITIALIZED;
    this._expr_13 = import10.UNINITIALIZED;
    this._expr_14 = import10.UNINITIALIZED;
    this._expr_15 = import10.UNINITIALIZED;
    this._expr_16 = import10.UNINITIALIZED;
    this._expr_17 = import10.UNINITIALIZED;
    this._expr_18 = import10.UNINITIALIZED;
    this._expr_19 = import10.UNINITIALIZED;
    this._expr_20 = import10.UNINITIALIZED;
    this._expr_21 = import10.UNINITIALIZED;
    this._expr_22 = import10.UNINITIALIZED;
    this._expr_23 = import10.UNINITIALIZED;
    this._expr_24 = import10.UNINITIALIZED;
    this._expr_25 = import10.UNINITIALIZED;
    this._expr_26 = import10.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.createRenderElement(this.renderer,(null as any),'textarea',new import11.InlineArray2(2,'class','md-input-element  md-input-element-textarea'),(null as any));
    this._DefaultValueAccessor_0_3 = new import21.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_0));
    this._RequiredValidator_0_4 = new import22.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_0_5 = [this._RequiredValidator_0_4.context];
    this._NG_VALUE_ACCESSOR_0_6 = [this._DefaultValueAccessor_0_3.context];
    this._NgModel_0_7 = new import23.Wrapper_NgModel((null as any),this._NG_VALIDATORS_0_5,(null as any),this._NG_VALUE_ACCESSOR_0_6);
    this._NgControl_0_8 = this._NgModel_0_7.context;
    this._NgControlStatus_0_9 = new import24.Wrapper_NgControlStatus(this._NgControl_0_8);
    var disposable_0:Function = import11.subscribeToRenderElement(this,this._el_0,new import11.InlineArray16(10,'focus',(null as any),'blur',(null as any),'ngModelChange',(null as any),'change',(null as any),'input',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_7.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import26.DefaultValueAccessor) && (0 === requestNodeIndex))) { return this._DefaultValueAccessor_0_3.context; }
    if (((token === import27.RequiredValidator) && (0 === requestNodeIndex))) { return this._RequiredValidator_0_4.context; }
    if (((token === import28.NG_VALIDATORS) && (0 === requestNodeIndex))) { return this._NG_VALIDATORS_0_5; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_6; }
    if (((token === import29.NgModel) && (0 === requestNodeIndex))) { return this._NgModel_0_7.context; }
    if (((token === import30.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_8; }
    if (((token === import31.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.parentView.context.required;
    this._RequiredValidator_0_4.check_required(currVal_0_1_0,throwOnChange,false);
    this._RequiredValidator_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_2_0:any = this.parentView.context.disabled;
    this._NgModel_0_7.check_isDisabled(currVal_0_2_0,throwOnChange,false);
    const currVal_0_2_1:any = this.parentView.context.value;
    this._NgModel_0_7.check_model(currVal_0_2_1,throwOnChange,false);
    this._NgModel_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_9.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_8:any = (this.parentView.context.align == 'end');
    if (import11.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'md-end',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.parentView.context.ariaLabel;
    if (import11.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementAttribute(this._el_0,'aria-label',((currVal_9 == null)? (null as any): currVal_9.toString()));
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.parentView.context.ariaLabelledBy;
    if (import11.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementAttribute(this._el_0,'aria-labelledby',((currVal_10 == null)? (null as any): currVal_10.toString()));
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.parentView.context.ariaDisabled;
    if (import11.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementAttribute(this._el_0,'aria-disabled',((currVal_11 == null)? (null as any): currVal_11.toString()));
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.parentView.context.ariaRequired;
    if (import11.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementAttribute(this._el_0,'aria-required',((currVal_12 == null)? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.parentView.context.ariaInvalid;
    if (import11.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementAttribute(this._el_0,'aria-invalid',((currVal_13 == null)? (null as any): currVal_13.toString()));
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parentView.context.autocomplete;
    if (import11.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementAttribute(this._el_0,'autocomplete',((currVal_14 == null)? (null as any): currVal_14.toString()));
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this.parentView.context.autocapitalize;
    if (import11.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementAttribute(this._el_0,'autocapitalize',((currVal_15 == null)? (null as any): currVal_15.toString()));
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = this.parentView.context.cols;
    if (import11.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementAttribute(this._el_0,'cols',((currVal_16 == null)? (null as any): currVal_16.toString()));
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.parentView.context.rows;
    if (import11.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementAttribute(this._el_0,'rows',((currVal_17 == null)? (null as any): currVal_17.toString()));
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.parentView.context.wrap;
    if (import11.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementAttribute(this._el_0,'wrap',((currVal_18 == null)? (null as any): currVal_18.toString()));
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = this.parentView.context.autofocus;
    if (import11.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_0,'autofocus',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.parentView.context.inputId;
    if (import11.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.parentView.context.maxlength;
    if (import11.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementAttribute(this._el_0,'maxlength',((currVal_21 == null)? (null as any): currVal_21.toString()));
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.parentView.context.minlength;
    if (import11.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementAttribute(this._el_0,'minlength',((currVal_22 == null)? (null as any): currVal_22.toString()));
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this.parentView.context.readonly;
    if (import11.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_0,'readOnly',currVal_23);
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.parentView.context.spellcheck;
    if (import11.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_0,'spellcheck',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = this.parentView.context.tabindex;
    if (import11.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementAttribute(this._el_0,'tabindex',((currVal_25 == null)? (null as any): currVal_25.toString()));
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = this.parentView.context.name;
    if (import11.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementAttribute(this._el_0,'name',((currVal_26 == null)? (null as any): currVal_26.toString()));
      this._expr_26 = currVal_26;
    }
    this._RequiredValidator_0_4.checkHost(this,this,this._el_0,throwOnChange);
    this._NgControlStatus_0_9.checkHost(this,this,this._el_0,throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_MdInput0>this.parentView)._viewQuery_input_0.setDirty();
  }
  destroyInternal():void {
    this._NgModel_0_7.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'focus')) {
      const pd_sub_0:any = ((<any>this.parentView.context._handleFocus($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_1:any = ((<any>this.parentView.context._handleBlur($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'ngModelChange')) {
      const pd_sub_2:any = ((<any>(this.parentView.context.value = $event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'change')) {
      const pd_sub_3:any = ((<any>this.parentView.context._handleChange($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
class View_MdInput4 extends import9.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_MdInput4,renderType_MdInput,import15.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.createRenderElement(this.renderer,(null as any),'span',new import11.InlineArray2(2,'class','md-placeholder-required'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'*',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_MdInput3 extends import9.AppView<any> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import25.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import32.Wrapper_NgIf;
  _text_4:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_MdInput3,renderType_MdInput,import15.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_8 = import10.UNINITIALIZED;
    this._expr_9 = import10.UNINITIALIZED;
    this._expr_10 = import10.UNINITIALIZED;
    this._expr_11 = import10.UNINITIALIZED;
    this._expr_12 = import10.UNINITIALIZED;
    this._expr_13 = import10.UNINITIALIZED;
    this._expr_14 = import10.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.createRenderElement(this.renderer,(null as any),'label',new import11.InlineArray2(2,'class','md-input-placeholder'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this.projectNodes(this._el_0,1);
    this._text_2 = this.renderer.createText(this._el_0,'',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_3 = new import25.ViewContainer(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import33.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import32.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._anchor_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import34.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.parentView.context.required;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_8:any = this.parentView.context.inputId;
    if (import11.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementAttribute(this._el_0,'for',((currVal_8 == null)? (null as any): currVal_8.toString()));
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.parentView.context.empty;
    if (import11.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_0,'md-empty',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.parentView.context.focused;
    if (import11.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_0,'md-focused',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.parentView.context.floatingPlaceholder;
    if (import11.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementClass(this._el_0,'md-float',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = (this.parentView.context.dividerColor == 'accent');
    if (import11.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementClass(this._el_0,'md-accent',currVal_12);
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = (this.parentView.context.dividerColor == 'warn');
    if (import11.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementClass(this._el_0,'md-warn',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = import11.inlineInterpolate(1,'\n        ',this.parentView.context.placeholder,'\n        ');
    if (import11.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setText(this._text_2,currVal_14);
      this._expr_14 = currVal_14;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import9.AppView<any> {
    if ((nodeIndex == 3)) { return new View_MdInput4(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
class View_MdInput5 extends import9.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_MdInput5,renderType_MdInput,import15.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import10.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    this._el_0 = import11.createRenderElement(this.renderer,(null as any),'div',new import11.InlineArray2(2,'class','md-hint'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import11.inlineInterpolate(1,'',this.parentView.context.hintLabel,'');
    if (import11.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_MdInput:import12.RenderComponentType = import11.createRenderComponentType('',4,import13.ViewEncapsulation.None,styles_MdInput,{});
export class View_MdInput0 extends import9.AppView<import1.MdInput> {
  _viewQuery_input_0:import14.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import25.ViewContainer;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import32.Wrapper_NgIf;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import25.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import32.Wrapper_NgIf;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _vc_12:import25.ViewContainer;
  _TemplateRef_12_5:any;
  _NgIf_12_6:import32.Wrapper_NgIf;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _text_22:any;
  _anchor_23:any;
  /*private*/ _vc_23:import25.ViewContainer;
  _TemplateRef_23_5:any;
  _NgIf_23_6:import32.Wrapper_NgIf;
  _text_24:any;
  _text_25:any;
  _text_26:any;
  /*private*/ _expr_40:any;
  /*private*/ _expr_41:any;
  /*private*/ _expr_42:any;
  /*private*/ _expr_43:any;
  constructor(viewUtils:import11.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdInput0,renderType_MdInput,import15.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import16.ChangeDetectorStatus.CheckAlways);
    this._expr_40 = import10.UNINITIALIZED;
    this._expr_41 = import10.UNINITIALIZED;
    this._expr_42 = import10.UNINITIALIZED;
    this._expr_43 = import10.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import17.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_input_0 = new import14.QueryList<any>();
    this._el_0 = import11.createRenderElement(this.renderer,parentRenderNode,'div',new import11.InlineArray2(2,'class','md-input-wrapper'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import11.createRenderElement(this.renderer,this._el_0,'div',new import11.InlineArray2(2,'class','md-input-table'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = import11.createRenderElement(this.renderer,this._el_2,'div',new import11.InlineArray2(2,'class','md-input-prefix'),(null as any));
    this.projectNodes(this._el_4,0);
    this._text_5 = this.renderer.createText(this._el_2,'\n\n    ',(null as any));
    this._el_6 = import11.createRenderElement(this.renderer,this._el_2,'div',new import11.InlineArray2(2,'class','md-input-infix'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'\n      ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_8 = new import25.ViewContainer(8,6,this,this._anchor_8);
    this._TemplateRef_8_5 = new import33.TemplateRef_(this,8,this._anchor_8);
    this._NgIf_8_6 = new import32.Wrapper_NgIf(this._vc_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_6,'\n\n      ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_10 = new import25.ViewContainer(10,6,this,this._anchor_10);
    this._TemplateRef_10_5 = new import33.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import32.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_6,'\n\n\n      ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_12 = new import25.ViewContainer(12,6,this,this._anchor_12);
    this._TemplateRef_12_5 = new import33.TemplateRef_(this,12,this._anchor_12);
    this._NgIf_12_6 = new import32.Wrapper_NgIf(this._vc_12.vcRef,this._TemplateRef_12_5);
    this._text_13 = this.renderer.createText(this._el_6,'\n    ',(null as any));
    this._text_14 = this.renderer.createText(this._el_2,'\n\n    ',(null as any));
    this._el_15 = import11.createRenderElement(this.renderer,this._el_2,'div',new import11.InlineArray2(2,'class','md-input-suffix'),(null as any));
    this.projectNodes(this._el_15,2);
    this._text_16 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_17 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_18 = import11.createRenderElement(this.renderer,this._el_0,'div',new import11.InlineArray2(2,'class','md-input-underline'),(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'\n    ',(null as any));
    this._el_20 = import11.createRenderElement(this.renderer,this._el_18,'span',new import11.InlineArray2(2,'class','md-input-ripple'),(null as any));
    this._text_21 = this.renderer.createText(this._el_18,'\n  ',(null as any));
    this._text_22 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._anchor_23 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_23 = new import25.ViewContainer(23,0,this,this._anchor_23);
    this._TemplateRef_23_5 = new import33.TemplateRef_(this,23,this._anchor_23);
    this._NgIf_23_6 = new import32.Wrapper_NgIf(this._vc_23.vcRef,this._TemplateRef_23_5);
    this._text_24 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this.projectNodes(this._el_0,3);
    this._text_25 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_26 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._text_22,
      this._anchor_23,
      this._text_24,
      this._text_25,
      this._text_26
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import34.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import33.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import34.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    if (((token === import33.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import34.NgIf) && (12 === requestNodeIndex))) { return this._NgIf_12_6.context; }
    if (((token === import33.TemplateRef) && (23 === requestNodeIndex))) { return this._TemplateRef_23_5; }
    if (((token === import34.NgIf) && (23 === requestNodeIndex))) { return this._NgIf_23_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_8_0_0:any = (this.context._elementType === 'input');
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    const currVal_10_0_0:any = (this.context._elementType === 'textarea');
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    const currVal_12_0_0:any = this.context._hasPlaceholder();
    this._NgIf_12_6.check_ngIf(currVal_12_0_0,throwOnChange,false);
    this._NgIf_12_6.ngDoCheck(this,this._anchor_12,throwOnChange);
    const currVal_23_0_0:any = (this.context.hintLabel != '');
    this._NgIf_23_6.check_ngIf(currVal_23_0_0,throwOnChange,false);
    this._NgIf_23_6.ngDoCheck(this,this._anchor_23,throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    this._vc_12.detectChangesInNestedViews(throwOnChange);
    this._vc_23.detectChangesInNestedViews(throwOnChange);
    const currVal_40:any = this.context.disabled;
    if (import11.checkBinding(throwOnChange,this._expr_40,currVal_40)) {
      this.renderer.setElementClass(this._el_18,'md-disabled',currVal_40);
      this._expr_40 = currVal_40;
    }
    const currVal_41:any = this.context.focused;
    if (import11.checkBinding(throwOnChange,this._expr_41,currVal_41)) {
      this.renderer.setElementClass(this._el_20,'md-focused',currVal_41);
      this._expr_41 = currVal_41;
    }
    const currVal_42:any = (this.context.dividerColor == 'accent');
    if (import11.checkBinding(throwOnChange,this._expr_42,currVal_42)) {
      this.renderer.setElementClass(this._el_20,'md-accent',currVal_42);
      this._expr_42 = currVal_42;
    }
    const currVal_43:any = (this.context.dividerColor == 'warn');
    if (import11.checkBinding(throwOnChange,this._expr_43,currVal_43)) {
      this.renderer.setElementClass(this._el_20,'md-warn',currVal_43);
      this._expr_43 = currVal_43;
    }
    if (!throwOnChange) { if (this._viewQuery_input_0.dirty) {
      this._viewQuery_input_0.reset([
        this._vc_8.mapNestedViews(View_MdInput1,(nestedView:View_MdInput1):any => {
          return [new import18.ElementRef(nestedView._el_0)];
        }),
        this._vc_10.mapNestedViews(View_MdInput2,(nestedView:View_MdInput2):any => {
          return [new import18.ElementRef(nestedView._el_0)];
        })
      ]
      );
      this.context._inputElement = this._viewQuery_input_0.first;
    } }
  }
  destroyInternal():void {
    this._vc_8.destroyNestedViews();
    this._vc_10.destroyNestedViews();
    this._vc_12.destroyNestedViews();
    this._vc_23.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import9.AppView<any> {
    if ((nodeIndex == 8)) { return new View_MdInput1(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 10)) { return new View_MdInput2(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    if ((nodeIndex == 12)) { return new View_MdInput3(this.viewUtils,this,12,this._anchor_12,this._vc_12); }
    if ((nodeIndex == 23)) { return new View_MdInput5(this.viewUtils,this,23,this._anchor_23,this._vc_23); }
    return (null as any);
  }
}