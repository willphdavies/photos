/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/tabs/tabs';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/portal/portal-directives';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection_util';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/query_list';
import * as import13 from '@angular/core/src/linker/view_type';
import * as import14 from '@angular/core/src/change_detection/constants';
import * as import15 from '@angular/core/src/linker/component_factory';
import * as import16 from '@angular/core/src/zone/ng_zone';
import * as import17 from './tab-group.css.shim.ngstyle';
import * as import18 from '@angular/core/src/linker/view_container';
import * as import19 from '../core/portal/portal-directives.ngfactory';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '@angular/core/src/linker/component_factory_resolver';
import * as import22 from './tab-label-wrapper.ngfactory';
import * as import23 from '../../common/src/directives/ng_if.ngfactory';
import * as import24 from '@angular/core/src/linker/element_ref';
import * as import25 from '@angular/common/src/directives/ng_if';
import * as import26 from '@angular/material/tabs/tab-label-wrapper';
import * as import27 from '../../common/src/directives/ng_for.ngfactory';
import * as import28 from './ink-bar.ngfactory';
import * as import29 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import30 from '@angular/common/src/directives/ng_for';
import * as import31 from '@angular/material/tabs/ink-bar';
class MdTabsModuleInjector extends import0.NgModuleInjector<import1.MdTabsModule> {
  _CommonModule_0:import2.CommonModule;
  _PortalModule_1:import3.PortalModule;
  _MdTabsModule_2:import1.MdTabsModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  createInternal():import1.MdTabsModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._PortalModule_1 = new import3.PortalModule();
    this._MdTabsModule_2 = new import1.MdTabsModule();
    return this._MdTabsModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.PortalModule)) { return this._PortalModule_1; }
    if ((token === import1.MdTabsModule)) { return this._MdTabsModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdTabsModuleNgFactory:import0.NgModuleFactory<import1.MdTabsModule> = new import0.NgModuleFactory(MdTabsModuleInjector,import1.MdTabsModule);
export class Wrapper_MdTabGroup {
  /*private*/ _eventHandler:Function;
  context:import1.MdTabGroup;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.MdTabGroup(p0);
    this._expr_0 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
  }
  check_selectedIndex(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.selectedIndex = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.selectedIndexChange.subscribe(_eventHandler.bind(view,'selectedIndexChange'))); }
    if (emit1) { (this.subscription1 = this.context.focusChange.subscribe(_eventHandler.bind(view,'focusChange'))); }
    if (emit2) { (this.subscription2 = this.context.selectChange.subscribe(_eventHandler.bind(view,'selectChange'))); }
  }
}
export class Wrapper_MdTab {
  /*private*/ _eventHandler:Function;
  context:import1.MdTab;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.MdTab(p0);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_textLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.textLabel = currValue;
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_MdTabGroup_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_MdTabGroup_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.MdTabGroup>;
  _MdTabGroup_0_3:Wrapper_MdTabGroup;
  _query_MdTab_0_0:import12.QueryList<any>;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabGroup_Host0,renderType_MdTabGroup_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'md-tab-group',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MdTabGroup0(this.viewUtils,this,0,this._el_0);
    this._MdTabGroup_0_3 = new Wrapper_MdTabGroup(this.injectorGet(import16.NgZone,this.parentIndex));
    this._query_MdTab_0_0 = new import12.QueryList<any>();
    this.compView_0.create(this._MdTabGroup_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import15.ComponentRef_<any>(0,this,this._el_0,this._MdTabGroup_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdTabGroup) && (0 === requestNodeIndex))) { return this._MdTabGroup_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MdTabGroup_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { if (this._query_MdTab_0_0.dirty) {
      this._query_MdTab_0_0.reset(([] as any[]));
      this._MdTabGroup_0_3.context._tabs = this._query_MdTab_0_0;
      this._query_MdTab_0_0.notifyOnChanges();
    } }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { this._MdTabGroup_0_3.context.ngAfterViewChecked(); }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdTabGroup_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MdTabGroupNgFactory:import15.ComponentFactory<import1.MdTabGroup> = new import15.ComponentFactory<import1.MdTabGroup>('md-tab-group',View_MdTabGroup_Host0,import1.MdTabGroup);
const styles_MdTabGroup:any[] = [import17.styles];
class View_MdTabGroup3 extends import8.AppView<any> {
  _el_0:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup3,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_MdTabGroup2 extends import8.AppView<any> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import18.ViewContainer;
  _TemplateRef_1_5:any;
  _PortalHostDirective_1_6:import19.Wrapper_PortalHostDirective;
  _text_2:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup2,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_1 = new import18.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import20.TemplateRef_(this,1,this._anchor_1);
    this._PortalHostDirective_1_6 = new import19.Wrapper_PortalHostDirective(this.parentView.parentView.parentView.injectorGet(import21.ComponentFactoryResolver,this.parentView.parentView.parentIndex),this._vc_1.vcRef);
    this._text_2 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.init(this._text_2,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import3.PortalHostDirective) && (1 === requestNodeIndex))) { return this._PortalHostDirective_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.parentView.context.$implicit.templateLabel;
    this._PortalHostDirective_1_6.check_portal(currVal_1_0_0,throwOnChange,false);
    this._PortalHostDirective_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._PortalHostDirective_1_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._vc_1.nativeElement,ctx);
    this._vc_1.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_2,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTabGroup3(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}
class View_MdTabGroup4 extends import8.AppView<any> {
  _text_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup4,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_1 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'',(null as any));
    this.init(this._text_0,((<any>this.renderer).directRenderer? (null as any): [this._text_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = import9.inlineInterpolate(1,'',this.parentView.context.$implicit.textLabel,'');
    if (import9.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_0,currVal_1);
      this._expr_1 = currVal_1;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
  }
}
class View_MdTabGroup1 extends import8.AppView<any> {
  _el_0:any;
  _MdTabLabelWrapper_0_3:import22.Wrapper_MdTabLabelWrapper;
  _text_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import18.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import23.Wrapper_NgIf;
  _text_4:any;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import18.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import23.Wrapper_NgIf;
  _text_7:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup1,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_15 = import7.UNINITIALIZED;
    this._expr_16 = import7.UNINITIALIZED;
    this._expr_17 = import7.UNINITIALIZED;
    this._expr_18 = import7.UNINITIALIZED;
    this._expr_19 = import7.UNINITIALIZED;
    this._expr_20 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray8(6,'class','md-tab-label','md-tab-label-wrapper','','role','tab'),(null as any));
    this._MdTabLabelWrapper_0_3 = new import22.Wrapper_MdTabLabelWrapper(new import24.ElementRef(this._el_0));
    this._text_1 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._text_2 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_3 = new import18.ViewContainer(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import20.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import23.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_6 = new import18.ViewContainer(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import20.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import23.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5,
      this._anchor_6,
      this._text_7
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import20.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import25.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import26.MdTabLabelWrapper) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._MdTabLabelWrapper_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MdTabLabelWrapper_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_3_0_0:any = this.context.$implicit.templateLabel;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_6_0_0:boolean = !this.context.$implicit.templateLabel;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_15:any = this.parentView.context._getTabLabelId(this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_15);
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = ((this.parentView.context.selectedIndex == this.context.index)? 0: (0 - 1));
    if (import9.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_0,'tabIndex',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.parentView.context._getTabContentId(this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementAttribute(this._el_0,'aria-controls',((currVal_17 == null)? (null as any): currVal_17.toString()));
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementAttribute(this._el_0,'aria-selected',((currVal_18 == null)? (null as any): currVal_18.toString()));
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_0,'md-tab-active',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.$implicit.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementClass(this._el_0,'md-tab-disabled',currVal_20);
      this._expr_20 = currVal_20;
    }
  }
  dirtyParentQueriesInternal():void {
    (<View_MdTabGroup0>this.parentView)._viewQuery_MdTabLabelWrapper_0.setDirty();
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_6.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 3)) { return new View_MdTabGroup2(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 6)) { return new View_MdTabGroup4(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.focusIndex = (this.parentView.context.selectedIndex = this.context.index))) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_MdTabGroup7 extends import8.AppView<any> {
  _el_0:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup7,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_MdTabGroup6 extends import8.AppView<any> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import18.ViewContainer;
  _TemplateRef_1_5:any;
  _PortalHostDirective_1_6:import19.Wrapper_PortalHostDirective;
  _text_2:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup6,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._vc_1 = new import18.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import20.TemplateRef_(this,1,this._anchor_1);
    this._PortalHostDirective_1_6 = new import19.Wrapper_PortalHostDirective(this.parentView.parentView.parentView.injectorGet(import21.ComponentFactoryResolver,this.parentView.parentView.parentIndex),this._vc_1.vcRef);
    this._text_2 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.init(this._text_2,((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import3.PortalHostDirective) && (1 === requestNodeIndex))) { return this._PortalHostDirective_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.parentView.context.$implicit.content;
    this._PortalHostDirective_1_6.check_portal(currVal_1_0_0,throwOnChange,false);
    this._PortalHostDirective_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._PortalHostDirective_1_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
    cb(this._vc_1.nativeElement,ctx);
    this._vc_1.visitNestedViewRootNodes(cb,ctx);
    cb(this._text_2,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTabGroup7(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}
class View_MdTabGroup5 extends import8.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import18.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import23.Wrapper_NgIf;
  _text_3:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabGroup5,renderType_MdTabGroup,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray4(4,'class','md-tab-body','role','tabpanel'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import18.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import20.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import23.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import25.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = (this.parentView.context.selectedIndex == this.context.index);
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    const currVal_7:any = this.parentView.context._getTabContentId(this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'md-tab-active',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.parentView.context._getTabLabelId(this.context.index);
    if (import9.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementAttribute(this._el_0,'aria-labelledby',((currVal_9 == null)? (null as any): currVal_9.toString()));
      this._expr_9 = currVal_9;
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 2)) { return new View_MdTabGroup6(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}
var renderType_MdTabGroup:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.Emulated,styles_MdTabGroup,{});
export class View_MdTabGroup0 extends import8.AppView<import1.MdTabGroup> {
  _viewQuery_MdTabLabelWrapper_0:import12.QueryList<any>;
  _viewQuery_MdInkBar_1:import12.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import18.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import27.Wrapper_NgFor;
  _text_3:any;
  _el_4:any;
  _MdInkBar_4_3:import28.Wrapper_MdInkBar;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import18.ViewContainer;
  _TemplateRef_9_5:any;
  _NgFor_9_6:import27.Wrapper_NgFor;
  _text_10:any;
  _text_11:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabGroup0,renderType_MdTabGroup,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_MdTabLabelWrapper_0 = new import12.QueryList<any>();
    this._viewQuery_MdInkBar_1 = new import12.QueryList<any>();
    this._el_0 = import9.createRenderElement(this.renderer,parentRenderNode,'div',new import9.InlineArray4(4,'class','md-tab-header','role','tablist'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import18.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import20.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import27.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.injectorGet(import29.IterableDiffers,this.parentIndex),this.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_4 = import9.createRenderElement(this.renderer,this._el_0,'md-ink-bar',import9.EMPTY_INLINE_ARRAY,(null as any));
    this._MdInkBar_4_3 = new import28.Wrapper_MdInkBar(this.renderer,new import24.ElementRef(this._el_4));
    this._text_5 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_7 = import9.createRenderElement(this.renderer,parentRenderNode,'div',new import9.InlineArray2(2,'class','md-tab-body-wrapper'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n  ',(null as any));
    this._anchor_9 = this.renderer.createTemplateAnchor(this._el_7,(null as any));
    this._vc_9 = new import18.ViewContainer(9,7,this,this._anchor_9);
    this._TemplateRef_9_5 = new import20.TemplateRef_(this,9,this._anchor_9);
    this._NgFor_9_6 = new import27.Wrapper_NgFor(this._vc_9.vcRef,this._TemplateRef_9_5,this.parentView.injectorGet(import29.IterableDiffers,this.parentIndex),this.ref);
    this._text_10 = this.renderer.createText(this._el_7,'\n',(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray2(2,'keydown',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._anchor_9,
      this._text_10,
      this._text_11
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import30.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import31.MdInkBar) && (4 === requestNodeIndex))) { return this._MdInkBar_4_3.context; }
    if (((token === import20.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import30.NgFor) && (9 === requestNodeIndex))) { return this._NgFor_9_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context._tabs;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._MdInkBar_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_9_0_0:any = this.context._tabs;
    this._NgFor_9_6.check_ngForOf(currVal_9_0_0,throwOnChange,false);
    this._NgFor_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._viewQuery_MdTabLabelWrapper_0.dirty) {
          this._viewQuery_MdTabLabelWrapper_0.reset([this._vc_2.mapNestedViews(View_MdTabGroup1,(nestedView:View_MdTabGroup1):any => {
            return [nestedView._MdTabLabelWrapper_0_3.context];
        })]);
        this.context._labelWrappers = this._viewQuery_MdTabLabelWrapper_0;
        this._viewQuery_MdTabLabelWrapper_0.notifyOnChanges();
      }
      if (this._viewQuery_MdInkBar_1.dirty) {
        this._viewQuery_MdInkBar_1.reset([this._MdInkBar_4_3.context]);
        this.context._inkBar = this._viewQuery_MdInkBar_1;
        this._viewQuery_MdInkBar_1.notifyOnChanges();
      }
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_9.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 2)) { return new View_MdTabGroup1(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 9)) { return new View_MdTabGroup5(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.context.handleKeydown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_MdTab_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_MdTab_Host0 extends import8.AppView<any> {
  _el_0:any;
  /*private*/ _vc_0:import18.ViewContainer;
  compView_0:import8.AppView<import1.MdTab>;
  _MdTab_0_5:Wrapper_MdTab;
  _query_MdTabLabel_0_0:import12.QueryList<any>;
  _el_1:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTab_Host0,renderType_MdTab_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'md-tab',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._vc_0 = new import18.ViewContainer(0,(null as any),this,this._el_0);
    this.compView_0 = new View_MdTab0(this.viewUtils,this,0,this._el_0);
    this._MdTab_0_5 = new Wrapper_MdTab(this._vc_0.vcRef);
    this._query_MdTabLabel_0_0 = new import12.QueryList<any>();
    this.compView_0.create(this._MdTab_0_5.context);
    this._el_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._query_MdTabLabel_0_0.reset(([] as any[]));
    this._MdTab_0_5.context.templateLabel = this._query_MdTabLabel_0_0.first;
    this.init(this._el_1,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import15.ComponentRef_<any>(0,this,this._el_0,this._MdTab_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdTab) && (0 === requestNodeIndex))) { return this._MdTab_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MdTab_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._vc_0.nativeElement,ctx);
    this._vc_0.visitNestedViewRootNodes(cb,ctx);
    cb(this._el_1,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdTabNgFactory:import15.ComponentFactory<import1.MdTab> = new import15.ComponentFactory<import1.MdTab>('md-tab',View_MdTab_Host0,import1.MdTab);
const styles_MdTab:any[] = ([] as any[]);
class View_MdTab1 extends import8.AppView<any> {
  _el_0:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTab1,renderType_MdTab,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    this.visitProjectedNodes(0,cb,ctx);
    cb(this._el_0,ctx);
  }
}
var renderType_MdTab:import10.RenderComponentType = import9.createRenderComponentType('',1,import11.ViewEncapsulation.None,styles_MdTab,{});
export class View_MdTab0 extends import8.AppView<import1.MdTab> {
  _viewQuery_TemplateRef_0:import12.QueryList<any>;
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import18.ViewContainer;
  _TemplateRef_1_4:any;
  _text_2:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTab0,renderType_MdTab,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_TemplateRef_0 = new import12.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_1 = new import18.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_4 = new import20.TemplateRef_(this,1,this._anchor_1);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._viewQuery_TemplateRef_0.reset([this._TemplateRef_1_4]);
    this.context._content = this._viewQuery_TemplateRef_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTab1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}